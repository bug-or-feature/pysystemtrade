# YAML
start_date: 2020-01-01
use_forecast_scale_estimates: False
use_forecast_weight_estimates: False
use_instrument_weight_estimates: False
use_forecast_div_mult_estimates: False
use_instrument_div_mult_estimates: False

forecast_scalar_estimate:
   pool_instruments: True
#
#
#
#
# Raw data
#
#
# Trading rules
#
volatility_calculation:
  func: "sysquant.estimators.vol.mixed_vol_calc"
  days: 35
  min_periods: 10
  vol_abs_min: 0.0000000001
  slow_vol_years: 20
  proportion_of_slow_vol: 0.35
  backfill: True
#
trading_rules:
  momentum8:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 8
         Lslow: 32
  momentum16:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 16
         Lslow: 64
  momentum32:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 32
         Lslow: 128


#
forecast_cap: 20.0
#
forecast_scalars:
  momentum8: 5.949404365193165
  momentum16: 4.104172020369661
  momentum32: 2.786994330124792


#
# forecast combination
#
# Capital correction
#
percentage_vol_target: 25.0
notional_trading_capital: 50000
base_currency: "GBP"

#
# Portfolio creation
#

forecast_weights:
  auto_weight_from_grouping:
    parameters:
      use_approx_DM: False
      apply_forecast_post_ceiling_cost_SR_before_weighting: True
    groups:
      divergent:
        weight: 1.0
        momentum8: 0.333
        momentum16: 0.333
        momentum32: 0.333


#
#instrument_weights:
#  auto_weight_from_grouping:
#    parameters:
#      use_approx_DM: True
#    groups:
#      ags:
#        weight: 0.143
#        COCOA_LDN_fsb: 0.2
#        COTTON2_fsb: 0.2
#        LEANHOG_fsb: 0.2
#        ROBUSTA_fsb: 0.2
#        SOYOIL_fsb: 0.2
#      rates:
#        weight: 0.143
#        BUND_fsb: 0.25
#        GILT_fsb: 0.25
#        OAT_fsb: 0.25
#        US30Y_fsb: 0.25
#      energies:
#        weight: 0.143
#        EUA_fsb: 0.5
#        GAS_US_fsb: 0.5
#      equity:
#        weight: 0.143
#        DAX_fsb: 0.25
#        HANG_fsb: 0.25
#        IBEX_fsb: 0.25
#        NASDAQ_fsb: 0.25
#      fx:
#        weight: 0.143
#        AUDJPY_fsb: 0.5
#        CHF_fsb: 0.5
#      metals:
#        weight: 0.143
#        COPPER_fsb: 0.5
#        SILVER_fsb: 0.5
#      vol:
#        weight: 0.143
#        VIX_fsb: 1.0

instruments:
  - NASDAQ_fsb
  - LEANHOG_fsb
  - SILVER_fsb

exclude_instrument_lists:
  # ignore_instruments are ignored in backtests
  # we still collect price data for them in production, do rolls etc
  # You can override this by modifying the backtest config .yaml file used in either sim or production
  # If you want to ignore because a duplicate market, use duplicate_instruments
  # If you want to include in sim data, but not actually trade, use trading_restrictions
  #
  # BEST FOR INSTRUMENTS THAT LOOK EXPENSIVE, BUT WHERE WE HAVEN'T GOT ACCURATE DATA YET
  #
  # REVIEW REGULARLY AND CHECK THESE INSTRUMENTS AREN'T BETTER ELSEWHERE...
  ignore_instruments:
    - JSE40_fsb
    - LUMBER_fsb

  #
  # Here we put stuff we can't trade, but for which we still want to bring in prices in sim
  # For the dynamically optimised strategy this list will be used in sim as 'don't trade'
  # For static strategies, you will probably want to set these to zero instrument weights
  # In production, things here will be added to the 'reduce_only' list of instruments
  # NOTE: This will be regionally biased, you will probably want to override this in private_config.yaml
  #
  trading_restrictions:

  # These are markets that are too expensive or illiquid to actually trade
  # For the dynamically optimised strategy this list will be used in sim as 'don't trade'
  # For static strategies, you will probably want to set these to zero instrument weights
  # In production, things here will be added to the 'reduce_only' list of instruments
  # Run interactive controls to get a list of suggested markets here
  # To override this list, change in sim .yaml config (sim) and private_config.yaml (production)
  bad_markets:

