# YAML
# This is an example of the variables you need to set
# in your private_config.yaml file in the ~/pysystemtrade/private folder
#

####################################################################################################
#
# OPTIONAL: Not in defaults.yaml
#

# email address variables - If missing emails won't be sent and you will have to check logs/echos

email_address: 'some_address@server.com' # add your address here
email_pwd: 'terrible_mash_of_stuff_for_security' # your password
email_server: 'the_outgoing_smtp_server' # the smtp server
# email_port: 587 # for future use: currently hardcoded at 587.
# email_security: 'SSL or TLS' # for future use

####################################################################################################
#
# OVERRIDES: In defaults.yaml and will override
#

#Mongo db variables

mongo_host: 'localhost' # can be elsewhere
mongo_db: 'production' # fits with all the documentation

####################################################################################################
#
# OPTIONAL: but required for pysystemtrade-fsb fork
#

# if you wish to import Barchart csv price data, or build roll calendars BEFORE importing the prices
# into mongo, set this
barchart_path: '/path/to/your/barchart/price/data'

# if you wish to get free FX price updates from Alpha Vantage, set this
alpha_vantage_api_key: 'ABC123XYZ987000000000'

# IG connection params. It's possible to use different creds for live and demo;
# add log strings to the 'demo_types' list
ig_markets:
  demo:
    ig_acc_type: 'demo'
    ig_username: 'demo user'
    ig_password: 'demo pw'
    ig_api_key: 'abc123etc'
    ig_acc_number: 'ABC456'
  live:
    ig_acc_type: 'live'
    ig_username: 'live user'
    ig_password: 'live pw'
    ig_api_key: 'xyz987etc'
    ig_acc_number: 'ZX1234'
  demo_types:
    - Interactive-Update-Capital-Manual
    - Update-Total-Capital
    - Update-Strategy-Capital
    - update_total_capital
    - strategy_allocation
    - check_external_position_break
    - spawn_children_from_new_instrument_orders
    - generate_force_roll_orders
    - create_broker_orders_from_contract_orders
    - process_fills_stack
    - handle_completed_orders
    - safe_stack_removal
